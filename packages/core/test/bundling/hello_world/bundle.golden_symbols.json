[
  {
    "name": "ALLOW_MULTIPLE_PLATFORMS"
  },
  {
    "name": "APP_BOOTSTRAP_LISTENER"
  },
  {
    "name": "APP_INITIALIZER"
  },
  {
    "name": "AfterRenderEventManager"
  },
  {
    "name": "AnonymousSubject"
  },
  {
    "name": "ApplicationInitStatus"
  },
  {
    "name": "ApplicationRef"
  },
  {
    "name": "BLOOM_BUCKET_BITS"
  },
  {
    "name": "BLOOM_MASK"
  },
  {
    "name": "BehaviorSubject"
  },
  {
    "name": "BrowserDomAdapter"
  },
  {
    "name": "CIRCULAR"
  },
  {
    "name": "COMPLETE_NOTIFICATION"
  },
  {
    "name": "CONTAINER_HEADER_OFFSET"
  },
  {
    "name": "ChainedInjector"
  },
  {
    "name": "ComponentFactory"
  },
  {
    "name": "ComponentFactory2"
  },
  {
    "name": "ComponentFactoryResolver"
  },
  {
    "name": "ComponentFactoryResolver2"
  },
  {
    "name": "ComponentRef"
  },
  {
    "name": "ComponentRef2"
  },
  {
    "name": "ConsumerObserver"
  },
  {
    "name": "DOCUMENT2"
  },
  {
    "name": "DomAdapter"
  },
  {
    "name": "EMPTY"
  },
  {
    "name": "EMPTY_ARRAY"
  },
  {
    "name": "EMPTY_OBJ"
  },
  {
    "name": "EMPTY_OBSERVER"
  },
  {
    "name": "EMPTY_PAYLOAD"
  },
  {
    "name": "EMPTY_SUBSCRIPTION"
  },
  {
    "name": "ENVIRONMENT_INITIALIZER"
  },
  {
    "name": "ElementRef"
  },
  {
    "name": "EnvironmentInjector"
  },
  {
    "name": "ErrorHandler"
  },
  {
    "name": "EventEmitter"
  },
  {
    "name": "GenericBrowserDomAdapter"
  },
  {
    "name": "HelloWorldModule"
  },
  {
    "name": "INJECTOR2"
  },
  {
    "name": "INJECTOR_DEF_TYPES"
  },
  {
    "name": "INJECTOR_SCOPE"
  },
  {
    "name": "INTERNAL_APPLICATION_ERROR_HANDLER"
  },
  {
    "name": "InitialRenderPendingTasks"
  },
  {
    "name": "InjectFlags"
  },
  {
    "name": "InjectionToken"
  },
  {
    "name": "Injector"
  },
  {
    "name": "LContainerFlags"
  },
  {
    "name": "LOCALE_ID2"
  },
  {
    "name": "LifecycleHooksFeature"
  },
  {
    "name": "MONKEY_PATCH_KEY_NAME"
  },
  {
    "name": "MOVED_VIEWS"
  },
  {
    "name": "NATIVE"
  },
  {
    "name": "NEW_LINE"
  },
  {
    "name": "NG_COMP_DEF"
  },
  {
    "name": "NG_ELEMENT_ID"
  },
  {
    "name": "NG_ENV_ID"
  },
  {
    "name": "NG_FACTORY_DEF"
  },
  {
    "name": "NG_INJECTABLE_DEF"
  },
  {
    "name": "NG_INJECTOR_DEF"
  },
  {
    "name": "NG_INJ_DEF"
  },
  {
    "name": "NG_MOD_DEF"
  },
  {
    "name": "NG_PROV_DEF"
  },
  {
    "name": "NG_TEMPLATE_SELECTOR"
  },
  {
    "name": "NOT_FOUND"
  },
  {
    "name": "NOT_FOUND_CHECK_ONLY_ELEMENT_INJECTOR"
  },
  {
    "name": "NOT_YET"
  },
  {
    "name": "NO_CHANGE"
  },
  {
    "name": "NO_PARENT_INJECTOR"
  },
  {
    "name": "NULL_INJECTOR"
  },
  {
    "name": "NgModuleFactory"
  },
  {
    "name": "NgModuleFactory2"
  },
  {
    "name": "NgModuleRef"
  },
  {
    "name": "NgModuleRef2"
  },
  {
    "name": "NgZone"
  },
  {
    "name": "NgZoneChangeDetectionScheduler"
  },
  {
    "name": "NodeInjector"
  },
  {
    "name": "NodeInjectorFactory"
  },
  {
    "name": "NoopNgZone"
  },
  {
    "name": "NullInjector"
  },
  {
    "name": "ObjectUnsubscribedError"
  },
  {
    "name": "Observable"
  },
  {
    "name": "OperatorSubscriber"
  },
  {
    "name": "PLATFORM_DESTROY_LISTENERS"
  },
  {
    "name": "PLATFORM_ID"
  },
  {
    "name": "PLATFORM_INITIALIZER"
  },
  {
    "name": "PRESERVE_HOST_CONTENT"
  },
  {
    "name": "PlatformRef"
  },
  {
    "name": "R3Injector"
  },
  {
    "name": "REACTIVE_LVIEW_CONSUMER_NODE"
  },
  {
    "name": "RendererFactory2"
  },
  {
    "name": "RuntimeError"
  },
  {
    "name": "SIMPLE_CHANGES_STORE"
  },
  {
    "name": "SafeSubscriber"
  },
  {
    "name": "Sanitizer"
  },
  {
    "name": "SimpleChange"
  },
  {
    "name": "Subject"
  },
  {
    "name": "Subscriber"
  },
  {
    "name": "Subscription"
  },
  {
    "name": "TESTABILITY"
  },
  {
    "name": "THROW_IF_NOT_FOUND"
  },
  {
    "name": "TRACKED_LVIEWS"
  },
  {
    "name": "TYPE"
  },
  {
    "name": "USE_VALUE"
  },
  {
    "name": "UnsubscriptionError"
  },
  {
    "name": "ViewEncapsulation"
  },
  {
    "name": "ViewRef"
  },
  {
    "name": "ZONE_IS_STABLE_OBSERVABLE"
  },
  {
    "name": "_DOM"
  },
  {
    "name": "_NullComponentFactoryResolver"
  },
  {
    "name": "__asyncValues"
  },
  {
    "name": "__await"
  },
  {
    "name": "__forward_ref__"
  },
  {
    "name": "_applyRootElementTransformImpl"
  },
  {
    "name": "_bind"
  },
  {
    "name": "_currentInjector"
  },
  {
    "name": "_global"
  },
  {
    "name": "_icuContainerIterate"
  },
  {
    "name": "_injectImplementation"
  },
  {
    "name": "_platformInjector"
  },
  {
    "name": "_retrieveHydrationInfoImpl"
  },
  {
    "name": "_wrapInTimeout"
  },
  {
    "name": "activeConsumer"
  },
  {
    "name": "addPropertyAlias"
  },
  {
    "name": "allocExpando"
  },
  {
    "name": "allocLFrame"
  },
  {
    "name": "applyNodes"
  },
  {
    "name": "applyProjectionRecursive"
  },
  {
    "name": "applyToElementOrContainer"
  },
  {
    "name": "applyView"
  },
  {
    "name": "arrRemove"
  },
  {
    "name": "assertConsumerNode"
  },
  {
    "name": "attachPatchData"
  },
  {
    "name": "baseElement"
  },
  {
    "name": "bind"
  },
  {
    "name": "bloomHasToken"
  },
  {
    "name": "callHook"
  },
  {
    "name": "callHookInternal"
  },
  {
    "name": "callHooks"
  },
  {
    "name": "checkStable"
  },
  {
    "name": "cleanUpView"
  },
  {
    "name": "collectNativeNodes"
  },
  {
    "name": "collectNativeNodesInLContainer"
  },
  {
    "name": "concatStringsWithSpace"
  },
  {
    "name": "config"
  },
  {
    "name": "configureViewWithDirective"
  },
  {
    "name": "consumerIsLive"
  },
  {
    "name": "consumerPollProducersForChange"
  },
  {
    "name": "context"
  },
  {
    "name": "convertToBitFlags"
  },
  {
    "name": "createElementRef"
  },
  {
    "name": "createErrorClass"
  },
  {
    "name": "createInjector"
  },
  {
    "name": "createInjectorWithoutInjectorInstances"
  },
  {
    "name": "createInvalidObservableTypeError"
  },
  {
    "name": "createLFrame"
  },
  {
    "name": "createLView"
  },
  {
    "name": "createNodeInjector"
  },
  {
    "name": "createNotification"
  },
  {
    "name": "createOperatorSubscriber"
  },
  {
    "name": "createPlatformFactory"
  },
  {
    "name": "createTView"
  },
  {
    "name": "deepForEach"
  },
  {
    "name": "deepForEachProvider"
  },
  {
    "name": "defaultCompare"
  },
  {
    "name": "detachMovedView"
  },
  {
    "name": "detectChangesInChildComponents"
  },
  {
    "name": "detectChangesInComponent"
  },
  {
    "name": "detectChangesInEmbeddedViews"
  },
  {
    "name": "detectChangesInView"
  },
  {
    "name": "detectChangesInViewIfAttached"
  },
  {
    "name": "diPublicInInjector"
  },
  {
    "name": "enterDI"
  },
  {
    "name": "enterView"
  },
  {
    "name": "epoch"
  },
  {
    "name": "errorContext"
  },
  {
    "name": "execFinalizer"
  },
  {
    "name": "executeCheckHooks"
  },
  {
    "name": "executeInitAndCheckHooks"
  },
  {
    "name": "executeSchedule"
  },
  {
    "name": "executeTemplate"
  },
  {
    "name": "executeViewQueryFn"
  },
  {
    "name": "forEachSingleProvider"
  },
  {
    "name": "forwardRef"
  },
  {
    "name": "freeConsumers"
  },
  {
    "name": "from"
  },
  {
    "name": "fromAsyncIterable"
  },
  {
    "name": "generateInitialInputs"
  },
  {
    "name": "generatePropertyAliases"
  },
  {
    "name": "getClosureSafeProperty"
  },
  {
    "name": "getComponentDef"
  },
  {
    "name": "getComponentLViewByIndex"
  },
  {
    "name": "getCurrentTNode"
  },
  {
    "name": "getCurrentTNodePlaceholderOk"
  },
  {
    "name": "getDeclarationTNode"
  },
  {
    "name": "getFactoryDef"
  },
  {
    "name": "getFirstLContainer"
  },
  {
    "name": "getInjectableDef"
  },
  {
    "name": "getInjectorDef"
  },
  {
    "name": "getInjectorIndex"
  },
  {
    "name": "getLView"
  },
  {
    "name": "getLViewParent"
  },
  {
    "name": "getNativeByTNode"
  },
  {
    "name": "getNearestLContainer"
  },
  {
    "name": "getNextLContainer"
  },
  {
    "name": "getNodeInjectable"
  },
  {
    "name": "getNullInjector"
  },
  {
    "name": "getOrCreateInjectable"
  },
  {
    "name": "getOrCreateNodeInjectorForNode"
  },
  {
    "name": "getOrCreateTNode"
  },
  {
    "name": "getOriginalError"
  },
  {
    "name": "getOwnDefinition"
  },
  {
    "name": "getParentInjectorIndex"
  },
  {
    "name": "getParentInjectorLocation"
  },
  {
    "name": "getParentInjectorView"
  },
  {
    "name": "getPlatform"
  },
  {
    "name": "getProjectionNodes"
  },
  {
    "name": "getPromiseCtor"
  },
  {
    "name": "getSimpleChangesStore"
  },
  {
    "name": "getSymbolIterator"
  },
  {
    "name": "getTNodeFromLView"
  },
  {
    "name": "handleReset"
  },
  {
    "name": "handleStoppedNotification"
  },
  {
    "name": "handleUnhandledError"
  },
  {
    "name": "icuContainerIterate"
  },
  {
    "name": "identity"
  },
  {
    "name": "importProvidersFrom"
  },
  {
    "name": "includeViewProviders"
  },
  {
    "name": "incrementInitPhaseFlags"
  },
  {
    "name": "inject"
  },
  {
    "name": "injectArgs"
  },
  {
    "name": "injectElementRef"
  },
  {
    "name": "injectInjectorOnly"
  },
  {
    "name": "injectRootLimpMode"
  },
  {
    "name": "injectableDefOrInjectorDefFactory"
  },
  {
    "name": "innerFrom"
  },
  {
    "name": "insertBloom"
  },
  {
    "name": "instructionState"
  },
  {
    "name": "internalImportProvidersFrom"
  },
  {
    "name": "invokeHostBindingsInCreationMode"
  },
  {
    "name": "isArrayLike"
  },
  {
    "name": "isAsyncIterable"
  },
  {
    "name": "isComponentDef"
  },
  {
    "name": "isEnvironmentProviders"
  },
  {
    "name": "isFunction"
  },
  {
    "name": "isInlineTemplate"
  },
  {
    "name": "isInteropObservable"
  },
  {
    "name": "isIterable"
  },
  {
    "name": "isLContainer"
  },
  {
    "name": "isLView"
  },
  {
    "name": "isPositive"
  },
  {
    "name": "isPromise"
  },
  {
    "name": "isPromise2"
  },
  {
    "name": "isReadableStreamLike"
  },
  {
    "name": "isStableFactory"
  },
  {
    "name": "isSubscription"
  },
  {
    "name": "isTypeProvider"
  },
  {
    "name": "isValueProvider"
  },
  {
    "name": "iterator"
  },
  {
    "name": "last"
  },
  {
    "name": "leaveDI"
  },
  {
    "name": "leaveView"
  },
  {
    "name": "leaveViewLight"
  },
  {
    "name": "lookupTokenUsingModuleInjector"
  },
  {
    "name": "lookupTokenUsingNodeInjector"
  },
  {
    "name": "makeRecord"
  },
  {
    "name": "markAncestorsForTraversal"
  },
  {
    "name": "markViewDirty"
  },
  {
    "name": "markViewForRefresh"
  },
  {
    "name": "maybeWrapInNotSelector"
  },
  {
    "name": "mergeHostAttribute"
  },
  {
    "name": "mergeHostAttrs"
  },
  {
    "name": "mergeMap"
  },
  {
    "name": "nativeInsertBefore"
  },
  {
    "name": "nextNgElementId"
  },
  {
    "name": "ngOnChangesSetInput"
  },
  {
    "name": "ngZoneApplicationErrorHandlerFactory"
  },
  {
    "name": "noop"
  },
  {
    "name": "noop2"
  },
  {
    "name": "notFoundValueOrThrow"
  },
  {
    "name": "observable"
  },
  {
    "name": "observeOn"
  },
  {
    "name": "onEnter"
  },
  {
    "name": "onLeave"
  },
  {
    "name": "operate"
  },
  {
    "name": "optionsReducer"
  },
  {
    "name": "platformBrowser"
  },
  {
    "name": "platformCore"
  },
  {
    "name": "popScheduler"
  },
  {
    "name": "processInjectorTypesWithProviders"
  },
  {
    "name": "producerRemoveLiveConsumerAtIndex"
  },
  {
    "name": "producerUpdateValueVersion"
  },
  {
    "name": "profiler"
  },
  {
    "name": "readableStreamLikeToAsyncGenerator"
  },
  {
    "name": "refreshContentQueries"
  },
  {
    "name": "refreshView"
  },
  {
    "name": "rememberChangeHistoryAndInvokeOnChangesHook"
  },
  {
    "name": "remove"
  },
  {
    "name": "removeFromArray"
  },
  {
    "name": "renderComponent"
  },
  {
    "name": "renderView"
  },
  {
    "name": "reportUnhandledError"
  },
  {
    "name": "requiresRefreshOrTraversal"
  },
  {
    "name": "resetPreOrderHookFlags"
  },
  {
    "name": "resolveForwardRef"
  },
  {
    "name": "retrieveHydrationInfo"
  },
  {
    "name": "saveNameToExportMap"
  },
  {
    "name": "scheduleAsyncIterable"
  },
  {
    "name": "searchTokensOnInjector"
  },
  {
    "name": "setActiveConsumer"
  },
  {
    "name": "setBindingRootForHostBindings"
  },
  {
    "name": "setCurrentDirectiveIndex"
  },
  {
    "name": "setCurrentInjector"
  },
  {
    "name": "setCurrentQueryIndex"
  },
  {
    "name": "setIncludeViewProviders"
  },
  {
    "name": "setInjectImplementation"
  },
  {
    "name": "setSelectedIndex"
  },
  {
    "name": "setUpAttributes"
  },
  {
    "name": "shouldSearchParent"
  },
  {
    "name": "stringify"
  },
  {
    "name": "stringifyCSSSelector"
  },
  {
    "name": "subscribeOn"
  },
  {
    "name": "throwProviderNotFoundError"
  },
  {
    "name": "timeoutProvider"
  },
  {
    "name": "toRefArray"
  },
  {
    "name": "uniqueIdCounter"
  },
  {
    "name": "unwrapRNode"
  },
  {
    "name": "updateMicroTaskStatus"
  },
  {
    "name": "viewAttachedToChangeDetector"
  },
  {
    "name": "walkProviderTree"
  },
  {
    "name": "writeDirectClass"
  },
  {
    "name": "writeToDirectiveInput"
  },
  {
    "name": "ɵɵdefineInjectable"
  },
  {
    "name": "ɵɵdefineInjector"
  },
  {
    "name": "ɵɵdefineNgModule"
  },
  {
    "name": "ɵɵdirectiveInject"
  },
  {
    "name": "ɵɵinject"
  }
]